class Solution {
    int Helper(vector<int>& nums, int target, vector<int>&dp )
    {
      int n= nums.size();
      if(target==0) return 1;
      if(target<0) return 0;
      if(dp[target]!=-1) return dp[target];
      // posible subset
      int ans=0;
      for(int i=0;i<n;i++){
        ans+=Helper(nums,target-nums[i],dp);
      }
      return dp[target]=ans;
    }
public:
      int combinationSum4(vector<int>& nums, int target) {
      vector<int>dp(target+1,-1);
      return Helper(nums,target,dp);
    }
};
